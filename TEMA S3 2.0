#define _CRT_SECURE_NO_WARNINGS
#include <iostream>
#include <string>
using namespace std;

class Student {
private:
    const int id;
    string nume;
    int anStudiu;
    int nrNote;
    float* note;
    static int nrStudenti;

public:
    
    Student() : id(++nrStudenti) {
        this->nume = "Necunoscut";
        this->anStudiu = 1;
        this->nrNote = 0;
        this->note = nullptr;
    }

    
    Student(string nume, int anStudiu, int nrNote, float* note) : id(++nrStudenti) {
        this->nume = nume;
        this->anStudiu = anStudiu;
        this->nrNote = nrNote;
        this->note = new float[nrNote];
        for (int i = 0; i < nrNote; i++) {
            this->note[i] = note[i];
        }
        delete[] note;  
    }

    
    ~Student() {
        delete[] note;
    }

    
    void afisareStudent() {
        cout << "\nStudent [" << id << "] - " << nume
             << ", anul " << anStudiu
             << ", note: ";
        if (note != nullptr && nrNote > 0) {
            for (int i = 0; i < nrNote; i++) {
                cout << note[i];
                if (i < nrNote - 1)
                    cout << ", ";
            }
        } else {
            cout << " - ";
        }
        cout << endl;
    }

   
    float calculeazaMedie() {
        if (nrNote == 0) return 0;
        float suma = 0;
        for (int i = 0; i < nrNote; i++) {
            suma += note[i];
        }
        return suma / nrNote;
    }

    
    bool esteIntegralist() {
        for (int i = 0; i < nrNote; i++) {
            if (note[i] < 5)
                return false;
        }
        return true;
    }
};


int Student::nrStudenti = 0;


int main() {
   
    Student s1;
    s1.afisareStudent();
    cout << "Medie: " << s1.calculeazaMedie() << "\n";
    cout << "Este integralist? " << (s1.esteIntegralist() ? "DA" : "NU") << "\n";

 
    float* note = new float[4]{ 8.5, 9, 7, 10 };
    Student s2("Andrei Popescu", 2, 4, note);
    s2.afisareStudent();
    cout << "Medie: " << s2.calculeazaMedie() << "\n";
    cout << "Este integralist? " << (s2.esteIntegralist() ? "DA" : "NU") << "\n";

    return 0;
}
